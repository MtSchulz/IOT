[{"id":"4c08bb30f2d375ff","type":"aedes broker","z":"8399673a0d745c48","name":"LocalBroker","mqtt_port":"1883","mqtt_ws_bind":"port","mqtt_ws_port":"","mqtt_ws_path":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","persistence_bind":"memory","dburl":"","usetls":false,"x":370,"y":380,"wires":[[],[]]},{"id":"07c8f0e8e8482094","type":"mqtt in","z":"8399673a0d745c48","name":"IN","topic":"#","qos":"1","datatype":"json","broker":"b2d2c5be8de49419","nl":false,"rap":true,"rh":0,"inputs":0,"x":350,"y":300,"wires":[["cfb24423bef1f578"]]},{"id":"017bde338dcb447a","type":"mqtt out","z":"8399673a0d745c48","name":"","topic":"/smart4.0","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b2d2c5be8de49419","x":760,"y":340,"wires":[]},{"id":"3b7f5d38934945c3","type":"debug","z":"8399673a0d745c48","name":"Dados Recebidos","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":790,"y":260,"wires":[]},{"id":"cfb24423bef1f578","type":"function","z":"8399673a0d745c48","name":"Agregar","func":"// 🧩 Lista de variáveis esperadas\nconst expectedVars = [\n    \"humi\", \"temp\", \"ai00\", \"ai01\",\n    \"psts\", \"vrms\", \"irms\", \"appp\", \"actp\", \"reap\"\n];\n\n// 🔄 Recupera o JSON acumulado do contexto local (memória)\nlet data = context.get(\"data\") || {};\n\n// 🎯 DEBUG: Estado atual ANTES do processamento\nnode.warn(\"═══════════════════════════════════════\");\nnode.warn(\"🔄 INICIANDO PROCESSAMENTO\");\nnode.warn(\"═══════════════════════════════════════\");\n\n// DEBUG MAIS RESUMIDO para não poluir\nlet receivedCount = Object.keys(data).length;\nlet missingCount = expectedVars.length - receivedCount;\nnode.warn(\"📊 Progresso: \" + receivedCount + \"/\" + expectedVars.length + \" variáveis\");\n\n// 🔍 Garante que o payload é um array de objetos [{variable, value}]\nlet arr = msg.payload;\n\nif (typeof arr === \"string\") {\n    // Corrige mensagens com \"value\":SEM_ASPAS → \"value\":\"SEM_ASPAS\"\n    arr = arr.replace(/\"value\":([A-Za-z_]+)/g, '\"value\":\"$1\"');\n    try {\n        arr = JSON.parse(arr);\n    } catch (e) {\n        node.error(\"❌ ERRO no parse JSON: \" + e.message);\n        return null;\n    }\n}\n\n// Se for objeto único, converte em array\nif (!Array.isArray(arr)) {\n    arr = [arr];\n}\n\n// 🧠 Atualiza o dicionário de variáveis recebidas\nif (arr.length > 0 && arr[0].variable) {\n    let item = arr[0];\n    \n    // DEBUG MAIS LIMPO - só mostra variável sendo processada\n    node.warn(\"🎯 Processando: \" + item.variable + \" = \" + item.value);\n    \n    // Verifica se é uma variável esperada\n    if (expectedVars.includes(item.variable)) {\n        data[item.variable] = item.value;\n    }\n}\n\n// 💾 Salva novamente no contexto\ncontext.set(\"data\", data);\n\n// ⚙️ Verifica se todas as variáveis esperadas já chegaram\nlet allReceived = expectedVars.every(v => data.hasOwnProperty(v));\nlet missingVars = expectedVars.filter(v => !data.hasOwnProperty(v));\n\nif (allReceived) {\n    node.warn(\"🚀 ✅ PACOTE COMPLETO ENVIADO!\");\n    node.warn(\"   Conteúdo: \" + JSON.stringify(data));\n    \n    msg.payload = data;\n    return msg;\n} else {\n    // Mostra progresso a cada 5 mensagens ou quando faltam poucas variáveis\n    let currentCount = Object.keys(data).length;\n    if (currentCount % 3 === 0 || missingVars.length <= 2) {\n        node.warn(\"⏳ Aguardando: \" + missingVars.join(\", \"));\n    }\n}\n\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":300,"wires":[["017bde338dcb447a","3b7f5d38934945c3"]]},{"id":"b2d2c5be8de49419","type":"mqtt-broker","name":"mqttSub","broker":"localhost","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]